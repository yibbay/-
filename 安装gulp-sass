首先到官网（https://github.com/sass/node-sass/releases）下载 node-sass 项目源码，下载后解压至相应的 node_modules 目录中。

接下来，打开 package.json 文件，检查 script 字段

"scripts": {    "coverage": "node scripts/coverage.js",    "install": "node scripts/install.js",    "postinstall": "node scripts/build.js",    "pretest": "node_modules/.bin/jshint bin lib scripts test",    "test": "node_modules/.bin/mocha test"  },
打开 install 字段对应的文件 scripts/install.js，可以看到 checkAndDownloadBinary() 在下载这个二进制文件，URL使用的是 process.sass.binaryUrl，我们可以直接在这里覆盖这个变量，把改地址修改为上面提到的那个能够下载的二进制文件地址。

download(process.sass.binaryUrl, process.sass.binaryPath, function(err) {    ....}
或者，找出上面提到的 sass.binaryUrl() 方法，打开 ../lib/extensions.js 文件，大约108行左右，修改为如下样子即可

function getBinaryUrl() {  
var site = flags['--sass-binary-site'] || 
process.env.SASS_BINARY_SITE  ||            
process.env.npm_config_sass_binary_site ||            
(pkg.nodeSassConfig && pkg.nodeSassConfig.binarySite) ||             
'https://github.com/sass/node-sass/releases/download';    
//return [site, 'v' + pkg.version, sass.binaryName].join('/'); 
return 'https://github.com/sass/node-sass-binaries/blob/master/win32-x64-46_binding.node';
}
重新安装
进入node-sass 项目根目录执行 install 命令：

$ cd node_modules/node-sass$ npm install 
如果不出意外，这个安装过程很快就会结束。

node-sass 安装完成后，gulp-sass 的依赖问题也就解决了，然后跳出去 node_modules 目录继续安装 gulp 。

$ cd ../..npm install gulp-sass
